IDENTIFICATION DIVISION.
PROGRAM-ID. INSERT.
ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT STUDENT-FILE-SEM1 ASSIGN TO "student_sem1.dat"
        ORGANIZATION IS LINE SEQUENTIAL
        FILE STATUS IS FILE-STATUS-SEM1.
    SELECT STUDENT-FILE-SEM2 ASSIGN TO "student_sem2.dat"
        ORGANIZATION IS LINE SEQUENTIAL
        FILE STATUS IS FILE-STATUS-SEM2.
    SELECT TEMP-STUDENT-FILE ASSIGN TO "temp_student.dat"
        ORGANIZATION IS LINE SEQUENTIAL
        FILE STATUS IS FILE-STATUS-TEMP.

DATA DIVISION.
FILE SECTION.
FD STUDENT-FILE-SEM1.
01 STUDENT-RECORD-SEM1.
    05 STUDENT-ID1        PIC X(10).
    05 STUDENT-NAME1      PIC X(30).
    05 STUDENT-SUBJECTS1.
        10 MARK1-CST11101  PIC 9(3).
        10 MARK1-CST11201  PIC 9(3).
        10 MARK1-CST11401  PIC 9(3).
        10 MARK1-CST11501  PIC 9(3).
        10 MARK1-CST11601  PIC 9(3).
        10 MARK1-CST11701  PIC 9(3).
    05 TOTAL-MARKS1       PIC 9(3).
    05 GRADE1             PIC X(2).

FD STUDENT-FILE-SEM2.
01 STUDENT-RECORD-SEM2.
    05 STUDENT-ID2        PIC X(10).
    05 STUDENT-NAME2      PIC X(30).
    05 STUDENT-SUBJECTS2.
        10 MARK2-CST12101  PIC 9(3).
        10 MARK2-CST12201  PIC 9(3).
        10 MARK2-CST12401  PIC 9(3).
        10 MARK2-CST12501  PIC 9(3).
        10 MARK2-CST12601  PIC 9(3).
        10 MARK2-CST12701  PIC 9(3).
    05 TOTAL-MARKS2       PIC 9(3).
    05 GRADE2             PIC X(2).

FD TEMP-STUDENT-FILE.
01 TEMP-STUDENT-RECORD    PIC X(80).


WORKING-STORAGE SECTION.
01 WS-EOF                  PIC X VALUE 'N'.
   88 FILE-END             VALUE 'Y'.
   88 FILE-NOT-END         VALUE 'N'.

01 WS-SEMESTER             PIC 9 VALUE 0.
01 WS-STUDENT-COUNT        PIC 9(3) VALUE 0.
01 WS-STUDENT-INDEX        PIC 9(3) VALUE 0.
01 WS-SUBJECT-INDEX        PIC 9 VALUE 1.
01 WS-LAST-STUDENT-ID      PIC 9(5) VALUE 0.
01 WS-NEXT-STUDENT-ID      PIC 9(5) VALUE 0.

01 WS-NEW-VALUE            PIC X(30).
01 WS-TRIMMED-MARK         PIC X(3).
01 WS-MARK-NUMERIC         PIC 9(3) VALUE 0.
01 WS-NUMERIC-ONLY         PIC X VALUE 'Y'.
01 WS-CHAR                 PIC X.
01 WS-NAME-VALID           PIC X VALUE 'N'.
01 WS-MARK-VALID           PIC X VALUE 'N'.

01 WS-STUDENT-ID-TEXT      PIC X(10).
01 WS-TOTAL-MARKS          PIC 9(4) VALUE 0.
01 WS-INDEX                PIC 9(2).
01 WS-STUDENT-ID-5CHARS    PIC X(5).
01 WS-STUDENT-ID-NUMERIC   PIC 9(5).
01 WS-FINAL-RECORD-LINE    PIC X(80).

01 WS-FORMATTED-ID         PIC X(10).
01 WS-FORMATTED-NAME       PIC X(30).
01 WS-FORMATTED-MARKS.
    05 WS-MARK-TEXT OCCURS 6 TIMES PIC X(3).
01 WS-FORMATTED-TOTAL      PIC 9(3).
01 WS-FORMATTED-GRADE      PIC X(2).

01 FILE-STATUS-SEM1        PIC XX.
01 FILE-STATUS-SEM2        PIC XX.
01 FILE-STATUS-TEMP        PIC XX.

01 WS-GRADE                PIC X(2).
01 SUBJECT-NAMES-SEM1.
   05 FILLER PIC X(10) VALUE "CST11101".
   05 FILLER PIC X(10) VALUE "CST11201".
   05 FILLER PIC X(10) VALUE "CST11401".
   05 FILLER PIC X(10) VALUE "CST11501".
   05 FILLER PIC X(10) VALUE "CST11601".
   05 FILLER PIC X(10) VALUE "CST11701".
01 SUBJECT-NAME-TABLE-SEM1 REDEFINES SUBJECT-NAMES-SEM1.
   05 SUBJECT-NAME-SEM1 OCCURS 6 TIMES PIC X(10).

*> Subject names for Semester 2
01 SUBJECT-NAMES-SEM2.
   05 FILLER PIC X(10) VALUE "CST12101".
   05 FILLER PIC X(10) VALUE "CST12201".
   05 FILLER PIC X(10) VALUE "CST12401".
   05 FILLER PIC X(10) VALUE "CST12501".
   05 FILLER PIC X(10) VALUE "CST12601".
   05 FILLER PIC X(10) VALUE "CST12701".
01 SUBJECT-NAME-TABLE-SEM2 REDEFINES SUBJECT-NAMES-SEM2.
   05 SUBJECT-NAME-SEM2 OCCURS 6 TIMES PIC X(10).
LINKAGE SECTION.
01 LS-SEMESTER PIC 9.

PROCEDURE DIVISION  USING LS-SEMESTER.
MAIN-LOGIC.
    MOVE LS-SEMESTER TO WS-SEMESTER.
    PERFORM GET-STUDENT-COUNT
    PERFORM OPEN-FILE-AND-GET-LAST-ID

    *> Open temp file for writing (this will create new or overwrite existing)
    OPEN OUTPUT TEMP-STUDENT-FILE
    IF FILE-STATUS-TEMP NOT = "00"
        DISPLAY "Error creating temp file. Status: " FILE-STATUS-TEMP
        STOP RUN
    END-IF

    PERFORM INSERT-STUDENTS
    CLOSE TEMP-STUDENT-FILE

    PERFORM APPEND-TEMP-TO-ORIGINAL
    DISPLAY "Insertion complete. Records added to semester " WS-SEMESTER " file."
    EXIT PROGRAM.
*> GET-SEMESTER.
    *> DISPLAY "Enter semester to insert records (1 or 2): "
    *> ACCEPT WS-SEMESTER
    *> IF WS-SEMESTER NOT = 1 AND WS-SEMESTER NOT = 2
        *> DISPLAY "Invalid semester. Only 1 or 2 allowed."
        *> PERFORM GET-SEMESTER
    *> END-IF.
GET-STUDENT-COUNT.
    DISPLAY "Enter number of students to insert (1-999): "
    ACCEPT WS-STUDENT-COUNT
    IF WS-STUDENT-COUNT <= 0 OR WS-STUDENT-COUNT > 999
        DISPLAY "Number of students must be between 1 and 999."
        PERFORM GET-STUDENT-COUNT
    END-IF.

OPEN-FILE-AND-GET-LAST-ID.
    IF LS-SEMESTER= 1
        OPEN INPUT STUDENT-FILE-SEM1
        IF FILE-STATUS-SEM1 NOT = "00"
            DISPLAY "Creating new semester 1 file"
            CLOSE STUDENT-FILE-SEM1
            OPEN OUTPUT STUDENT-FILE-SEM1
            CLOSE STUDENT-FILE-SEM1
            OPEN INPUT STUDENT-FILE-SEM1
        END-IF
        SET FILE-NOT-END TO TRUE
        PERFORM GET-LAST-STUDENT-ID-SEM1
        CLOSE STUDENT-FILE-SEM1
    ELSE
        OPEN INPUT STUDENT-FILE-SEM2
        IF FILE-STATUS-SEM2 NOT = "00"
            DISPLAY "Creating new semester 2 file"
            CLOSE STUDENT-FILE-SEM2
            OPEN OUTPUT STUDENT-FILE-SEM2
            CLOSE STUDENT-FILE-SEM2
            OPEN INPUT STUDENT-FILE-SEM2
        END-IF
        SET FILE-NOT-END TO TRUE
        PERFORM GET-LAST-STUDENT-ID-SEM2
        CLOSE STUDENT-FILE-SEM2
    END-IF.

GET-LAST-STUDENT-ID-SEM1.

    MOVE 0 TO WS-LAST-STUDENT-ID
    PERFORM UNTIL FILE-END
        READ STUDENT-FILE-SEM1
            AT END
                SET FILE-END TO TRUE
            NOT AT END
                IF FUNCTION NUMVAL(STUDENT-ID1) > WS-LAST-STUDENT-ID
                    MOVE FUNCTION NUMVAL(STUDENT-ID1) TO WS-LAST-STUDENT-ID
                END-IF
        END-READ
    END-PERFORM.


GET-LAST-STUDENT-ID-SEM2.
    MOVE 0 TO WS-LAST-STUDENT-ID
    PERFORM UNTIL FILE-END
        READ STUDENT-FILE-SEM2
            AT END
                SET FILE-END TO TRUE
            NOT AT END
                IF FUNCTION NUMVAL(STUDENT-ID2) > WS-LAST-STUDENT-ID
                    MOVE FUNCTION NUMVAL(STUDENT-ID2) TO WS-LAST-STUDENT-ID
                END-IF
        END-READ
    END-PERFORM.

INSERT-STUDENTS.
    PERFORM VARYING WS-STUDENT-INDEX FROM 1 BY 1 UNTIL
    WS-STUDENT-INDEX > WS-STUDENT-COUNT
        ADD 1 TO WS-LAST-STUDENT-ID
        MOVE WS-LAST-STUDENT-ID TO WS-STUDENT-ID-NUMERIC

        MOVE WS-STUDENT-ID-NUMERIC TO WS-STUDENT-ID-5CHARS
        INSPECT WS-STUDENT-ID-5CHARS REPLACING LEADING SPACES BY '0'

        MOVE SPACES TO WS-STUDENT-ID-TEXT
        MOVE WS-STUDENT-ID-5CHARS TO WS-STUDENT-ID-TEXT(6:5)

        PERFORM ACCEPT-STUDENT-NAME
        PERFORM ACCEPT-SUBJECT-MARKS
        PERFORM CALCULATE-TOTAL-MARKS-AND-GRADE
        PERFORM WRITE-RECORD
    END-PERFORM.

ACCEPT-STUDENT-NAME.
    MOVE 'N' TO WS-NAME-VALID
    PERFORM UNTIL WS-NAME-VALID = 'Y'
        DISPLAY "Enter student name (max 15 chars): "
        ACCEPT WS-NEW-VALUE
        IF FUNCTION LENGTH(FUNCTION TRIM(WS-NEW-VALUE)) <= 15
            MOVE FUNCTION TRIM(WS-NEW-VALUE) TO WS-FORMATTED-NAME
            MOVE 'Y' TO WS-NAME-VALID
        ELSE
            DISPLAY "Name must be 15 characters or fewer."
        END-IF
    END-PERFORM.

ACCEPT-SUBJECT-MARKS.
    MOVE 1 TO WS-SUBJECT-INDEX
    PERFORM UNTIL WS-SUBJECT-INDEX > 6
        MOVE 'N' TO WS-MARK-VALID
        PERFORM UNTIL WS-MARK-VALID = 'Y'
            IF WS-SEMESTER = 1
                DISPLAY "Enter mark for " SUBJECT-NAME-SEM1(WS-SUBJECT-INDEX) " (0 to 100): "
            ELSE
                DISPLAY "Enter mark for " SUBJECT-NAME-SEM2(WS-SUBJECT-INDEX) " (0 to 100): "
            END-IF
            ACCEPT WS-TRIMMED-MARK
            MOVE ZERO TO WS-MARK-NUMERIC
            MOVE "Y" TO WS-NUMERIC-ONLY

            *> Rest of your existing validation code...
            PERFORM VARYING WS-INDEX FROM 1 BY 1
                UNTIL WS-INDEX > FUNCTION LENGTH(FUNCTION TRIM(WS-TRIMMED-MARK))
                MOVE WS-TRIMMED-MARK(WS-INDEX:1) TO WS-CHAR
                IF WS-CHAR NOT NUMERIC
                    MOVE "N" TO WS-NUMERIC-ONLY
                END-IF
            END-PERFORM

            IF WS-NUMERIC-ONLY = "Y"
                MOVE FUNCTION NUMVAL(WS-TRIMMED-MARK) TO WS-MARK-NUMERIC
                IF WS-MARK-NUMERIC >= 0 AND WS-MARK-NUMERIC <= 100
                    MOVE "Y" TO WS-MARK-VALID
                ELSE
                    DISPLAY "Mark must be between 0 and 100."
                END-IF
            ELSE
                DISPLAY "Invalid input. Only numbers 0-100 allowed."
            END-IF
        END-PERFORM

        *> Store the valid mark
        MOVE WS-MARK-NUMERIC TO WS-MARK-TEXT(WS-SUBJECT-INDEX)
        ADD 1 TO WS-SUBJECT-INDEX
    END-PERFORM.

CALCULATE-TOTAL-MARKS-AND-GRADE.
    MOVE 0 TO WS-TOTAL-MARKS
    PERFORM VARYING WS-SUBJECT-INDEX FROM 1 BY 1 UNTIL WS-SUBJECT-INDEX > 6
        ADD FUNCTION NUMVAL(WS-MARK-TEXT(WS-SUBJECT-INDEX)) TO WS-TOTAL-MARKS
    END-PERFORM

    EVALUATE TRUE
        WHEN WS-TOTAL-MARKS >= 540
            MOVE "A " TO WS-GRADE
        WHEN WS-TOTAL-MARKS >= 480
            MOVE "B " TO WS-GRADE
        WHEN WS-TOTAL-MARKS >= 420
            MOVE "C " TO WS-GRADE
        WHEN OTHER
            MOVE "F " TO WS-GRADE
    END-EVALUATE.

FORMAT-RECORD-LINE.
    MOVE WS-STUDENT-ID-5CHARS TO WS-FORMATTED-ID
    MOVE FUNCTION TRIM(WS-FORMATTED-NAME) TO WS-FORMATTED-NAME

    PERFORM VARYING WS-INDEX FROM 1 BY 1 UNTIL WS-INDEX > 6
        INSPECT WS-MARK-TEXT(WS-INDEX) REPLACING LEADING SPACES BY '0'
    END-PERFORM

    MOVE WS-TOTAL-MARKS TO WS-FORMATTED-TOTAL
    INSPECT WS-FORMATTED-TOTAL REPLACING LEADING SPACES BY '0'
    MOVE WS-GRADE TO WS-FORMATTED-GRADE

    STRING
        WS-FORMATTED-ID DELIMITED SIZE

        WS-FORMATTED-NAME DELIMITED BY SIZE

        WS-MARK-TEXT(1) DELIMITED BY SIZE

        WS-MARK-TEXT(2) DELIMITED BY SIZE

        WS-MARK-TEXT(3) DELIMITED BY SIZE

        WS-MARK-TEXT(4) DELIMITED BY SIZE

        WS-MARK-TEXT(5) DELIMITED BY SIZE

        WS-MARK-TEXT(6) DELIMITED BY SIZE

        WS-FORMATTED-TOTAL DELIMITED BY SIZE

        WS-FORMATTED-GRADE DELIMITED BY SIZE
        INTO WS-FINAL-RECORD-LINE.
WRITE-RECORD.
    PERFORM FORMAT-RECORD-LINE
    MOVE WS-FINAL-RECORD-LINE TO TEMP-STUDENT-RECORD
    WRITE TEMP-STUDENT-RECORD
    IF FILE-STATUS-TEMP NOT = "00"
        DISPLAY "Error writing to temp file. Status: " FILE-STATUS-TEMP
    END-IF

    DISPLAY "Temporarily Stored Record:"
    DISPLAY WS-FINAL-RECORD-LINE.

APPEND-TEMP-TO-ORIGINAL.
    CLOSE TEMP-STUDENT-FILE

    *> Open temp file for reading
    OPEN INPUT TEMP-STUDENT-FILE
    IF FILE-STATUS-TEMP NOT = "00"
        DISPLAY "Error opening temp file. Status: " FILE-STATUS-TEMP
        STOP RUN
    END-IF

    *> Open the appropriate semester file in EXTEND mode
    IF WS-SEMESTER = 1
        OPEN EXTEND STUDENT-FILE-SEM1
        IF FILE-STATUS-SEM1 NOT = "00"
            DISPLAY "Error opening semester 1 file. Status: " FILE-STATUS-SEM1
            DISPLAY "Creating new file..."
            OPEN OUTPUT STUDENT-FILE-SEM1
            CLOSE STUDENT-FILE-SEM1
            OPEN EXTEND STUDENT-FILE-SEM1
            IF FILE-STATUS-SEM1 NOT = "00"
                DISPLAY "Fatal error: Cannot access semester 1 file"
                STOP RUN
            END-IF
        END-IF
    ELSE
        OPEN EXTEND STUDENT-FILE-SEM2
        IF FILE-STATUS-SEM2 NOT = "00"
            DISPLAY "Error opening semester 2 file. Status: " FILE-STATUS-SEM2
            DISPLAY "Creating new file..."
            OPEN OUTPUT STUDENT-FILE-SEM2
            CLOSE STUDENT-FILE-SEM2
            OPEN EXTEND STUDENT-FILE-SEM2
            IF FILE-STATUS-SEM2 NOT = "00"
                DISPLAY "Fatal error: Cannot access semester 2 file"
                STOP RUN
            END-IF
        END-IF
    END-IF

    *> Reset EOF flag
    MOVE 'N' TO WS-EOF

    *> Copy records from temp to semester file
    PERFORM UNTIL FILE-END
        READ TEMP-STUDENT-FILE
            AT END
                SET FILE-END TO TRUE
            NOT AT END
                IF WS-SEMESTER = 1
                    MOVE TEMP-STUDENT-RECORD TO STUDENT-RECORD-SEM1
                    WRITE STUDENT-RECORD-SEM1
                    IF FILE-STATUS-SEM1 NOT = "00"
                        DISPLAY "Error writing to semester 1 file. Status: " FILE-STATUS-SEM1
                    END-IF
                ELSE
                    MOVE TEMP-STUDENT-RECORD TO STUDENT-RECORD-SEM2
                    WRITE STUDENT-RECORD-SEM2
                    IF FILE-STATUS-SEM2 NOT = "00"
                        DISPLAY "Error writing to semester 2 file. Status: " FILE-STATUS-SEM2
                    END-IF
                END-IF
        END-READ
    END-PERFORM

    *> Close all files
    CLOSE TEMP-STUDENT-FILE
    IF WS-SEMESTER = 1
        CLOSE STUDENT-FILE-SEM1
    ELSE
        CLOSE STUDENT-FILE-SEM2
    END-IF.
